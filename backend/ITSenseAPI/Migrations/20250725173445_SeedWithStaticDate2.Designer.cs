// <auto-generated />
using System;
using ITSenseAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITSenseAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250725173445_SeedWithStaticDate2")]
    partial class SeedWithStaticDate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITSenseAPI.Entities.InventoryOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("InventoryOutputs");
                });

            modelBuilder.Entity("ITSenseAPI.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfManufacturingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductStatusId");

                    b.HasIndex("TypeOfManufacturingId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = 1,
                            Name = "Taladro Bosch",
                            ProductStatusId = 1,
                            RegisteredDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            StockQuantity = 10,
                            TypeOfManufacturingId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsActive = 1,
                            Name = "Martillo Stanley",
                            ProductStatusId = 1,
                            RegisteredDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            StockQuantity = 20,
                            TypeOfManufacturingId = 2
                        },
                        new
                        {
                            Id = 3,
                            IsActive = 1,
                            Name = "Cinta Métrica",
                            ProductStatusId = 2,
                            RegisteredDate = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            StockQuantity = 30,
                            TypeOfManufacturingId = 2
                        });
                });

            modelBuilder.Entity("ITSenseAPI.Entities.ProductStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ProductStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = 1,
                            Name = "Disponible"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = 1,
                            Name = "No Disponible"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = 1,
                            Name = "Defectuoso"
                        });
                });

            modelBuilder.Entity("ITSenseAPI.Entities.TypeOfManufacturing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypesOfManufacturing");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = 1,
                            Name = "Manual"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = 1,
                            Name = "Manual y a máquina"
                        });
                });

            modelBuilder.Entity("ITSenseAPI.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ITSenseAPI.Entities.InventoryOutput", b =>
                {
                    b.HasOne("ITSenseAPI.Entities.Product", "Product")
                        .WithMany("Outputs")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ITSenseAPI.Entities.Product", b =>
                {
                    b.HasOne("ITSenseAPI.Entities.ProductStatus", "ProductStatus")
                        .WithMany("Products")
                        .HasForeignKey("ProductStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITSenseAPI.Entities.TypeOfManufacturing", "TypeOfManufacturing")
                        .WithMany("Products")
                        .HasForeignKey("TypeOfManufacturingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductStatus");

                    b.Navigation("TypeOfManufacturing");
                });

            modelBuilder.Entity("ITSenseAPI.Entities.Product", b =>
                {
                    b.Navigation("Outputs");
                });

            modelBuilder.Entity("ITSenseAPI.Entities.ProductStatus", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ITSenseAPI.Entities.TypeOfManufacturing", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
